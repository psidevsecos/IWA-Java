name: Build and Deploy Java App

on:
  push:
    branches: [ "main" ]
    tags: [ "*" ]
  pull_request:
    branches: [ "main" ]
    
env:
  APP_NAME: "iwa-java"

jobs:
  build-and-push:

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package
        
      - name: Upload Artifact (JAR)
        uses: actions/upload-artifact@v4
        with:
          name: iwa-jar
          path: target/iwa.jar  
          
      - name: Log in to GHCR
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/${{ env.APP_NAME }}:latest .

      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/${{ env.APP_NAME }}:latest
          
  release:
    needs: build-and-push
    runs-on: 
      group: linux-runner
      labels: Linux
    permissions:
      contents: write
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: iwa-jar
          path: iwa-jar

      - name: Release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          files: iwa-jar/*.jar


  deploy-to-vm:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: SSH and deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: 172.188.112.254
          username: devops
          password: ${{ secrets.VM_SSH_PASSWORD }}
          script: |
            echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker pull ghcr.io/${{ github.repository_owner }}/${{ env.APP_NAME }}:latest
            docker stop ${{ env.APP_NAME }} || true
            docker rm ${{ env.APP_NAME }} || true
            docker run -d --name ${{ env.APP_NAME }} -p 8081:8080 ghcr.io/${{ github.repository_owner }}/${{ env.APP_NAME }}:latest
